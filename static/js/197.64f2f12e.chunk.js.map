{"version":3,"file":"static/js/197.64f2f12e.chunk.js","mappings":"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","sources":["components/addOrderForm/AddOrderForm.js","components/addProductForm/AddProductForm.js","components/addItemForm/AddItemForm.js","components/ordersListItem/OrdersListItem.js","components/ordersList/OrdersList.js","components/spinner/Spinner.js","hooks/useDate.js"],"sourcesContent":["import {useHttp} from '../../hooks/http.hook';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { orderCreated } from '../ordersList/OrdersSlice';\nimport useDate from \"../../hooks/useDate\";\n\nconst AddOrderForm = () => {\n    const [title, setTitle] = useState(''),\n          [description, setDescription] = useState('');\n\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n    const date = useDate(true);\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n\n        const newItem = {\n            id: uuidv4(),\n            title,\n            date,\n            description\n        }\n\n        request(\"http://localhost:3001/orders\", \"POST\", JSON.stringify(newItem))\n            .then(res => console.log(res, 'Success'))\n            .then(dispatch(orderCreated(newItem)))\n            .catch(err => console.log(err));\n\n        setTitle('');\n        setDescription('');\n    }\n\n    return (\n        <form className=\"border p-4 shadow-lg rounded mb-4\" onSubmit={onSubmitHandler}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"title\" className=\"form-label fs-4\">Order title</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"title\" \n                    className=\"form-control\" \n                    id=\"title\" \n                    placeholder=\"Order title\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}/>\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"desc\" className=\"form-label fs-4\">Order title</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"desc\" \n                    className=\"form-control\" \n                    id=\"desc\" \n                    placeholder=\"Order description\"\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}/>\n            </div>\n            <button type=\"submit\" className=\"btn btn-success\">Create order</button>\n        </form>\n    )\n}\n\nexport default AddOrderForm;","import {useHttp} from '../../hooks/http.hook';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { productCreated } from '../productsList/ProductsSlice';\nimport useDate from \"../../hooks/useDate\";\n\nconst AddProductForm = () => {\n    const [title, setTitle] = useState(''),\n          [serialNumber, setserialNumber] = useState(''),\n          [isNew, setIsNew] = useState(''),\n          [photo, setPhoto] = useState(''),\n          [type, setType] = useState(''),\n          [specification, setSpecification] = useState(''),\n          [guarStart, setGuarStart] = useState(''),\n          [guarEnd, setGuarEnd] = useState(''),\n          [priceList, setPriceList] = useState([{value: '', symbol: '', isDefault: false}]);\n\n    const {filters, filtersLoadingStatus} = useSelector(state => state.filters);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n    const date = useDate(true);\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n\n        const newItem = {\n            id: uuidv4(),\n            serialNumber,\n            isNew,\n            photo,\n            title,\n            type,\n            specification,\n            guarantee: {\n                start: guarStart,\n                end: guarEnd\n            },\n            price: priceList,\n            date\n        }\n\n        request(\"http://localhost:3001/products\", \"POST\", JSON.stringify(newItem))\n            .then(res => {\n                console.log(res, 'Success');\n                document.getElementById('createProduct').innerText = \"Success\";\n                setTimeout(() => {\n                    document.getElementById('collapseForm').classList.remove('show');\n                    document.getElementById('createProduct').innerText = \"Create product\";\n                }, 2000);\n            })\n            .then(dispatch(productCreated(newItem)))\n            .catch(err => console.log(err));\n\n        setserialNumber('');\n        setIsNew('');\n        setPhoto('');\n        setTitle('');\n        setType('');\n        setSpecification('');\n        setGuarStart('');\n        setGuarEnd('');\n        setPriceList([{value: '', symbol: '', isDefault: false}]);\n    }\n\n    const renderFilters = (filters, status) => {\n        if (status === \"loading\") {\n            return <option>Loading</option>\n        } else if (status === \"error\") {\n            return <option>Error</option>\n        }\n        \n        if (filters && filters.length > 0 ) {\n            return filters.map(({name, label}) => {\n                // eslint-disable-next-line\n                if (name === 'all')  return;\n\n                return <option key={name} value={name}>{label}</option>\n            })\n        }\n    }\n\n    const handleCheckboxes = () => {\n        let checkboxes = document.querySelectorAll('input[type=checkbox]');\n\n        checkboxes.forEach(el => {\n            el.checked = false;\n        });\n        priceList.forEach(el => {\n            el.isDefault = false;\n        });\n    }\n\n    const handlePriceChange = (e, index, checkbox = false) => {\n        const { name, value, checked } = e.target;\n        const list = [...priceList];\n        if(checkbox) {\n            handleCheckboxes();\n            e.target.checked = checked;\n            list[index][name] = checked;\n        } else {\n            list[index][name] = value;\n        }\n        setPriceList(list);\n    };\n\n    const handlePriceAdd = () => {\n        console.log(priceList);\n        setPriceList([...priceList, { value: '', symbol: '', isDefault: false }]);\n    }\n\n    const handlePriceRemove = (index) => {\n        const list = [...priceList];\n        list.splice(index, 1);\n        setPriceList(list);\n    };\n\n    return (\n        <form className=\"border p-4 shadow-lg rounded mb-4\" onSubmit={onSubmitHandler}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"serialNumber\" className=\"form-label fs-4\">Serial Number</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"serialNumber\" \n                    className=\"form-control\" \n                    id=\"serialNumber\" \n                    placeholder=\"Serial Number\"\n                    value={serialNumber}\n                    onChange={(e) => setserialNumber(e.target.value)}/>\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"isNew\" className=\"form-label\">Product Usage</label>\n                <select \n                    required\n                    className=\"form-select\" \n                    id=\"isNew\" \n                    name=\"isNew\"\n                    value={isNew}\n                    onChange={(e) => setIsNew(e.target.value)}>\n                    <option value=\"\">Usage</option>\n                    { renderFilters(filters, filtersLoadingStatus) }\n                </select>\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"title\" className=\"form-label fs-4\">Product Title</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"title\" \n                    className=\"form-control\" \n                    id=\"title\" \n                    placeholder=\"Product Title\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}/>\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"type\" className=\"form-label fs-4\">Product Type</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"type\" \n                    className=\"form-control\" \n                    id=\"type\" \n                    placeholder=\"Product Type\"\n                    value={type}\n                    onChange={(e) => setType(e.target.value)}/>\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"specification\" className=\"form-label fs-4\">Product specification</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"specification\" \n                    className=\"form-control\" \n                    id=\"specification\" \n                    placeholder=\"Product specification\"\n                    value={specification}\n                    onChange={(e) => setSpecification(e.target.value)}/>\n            </div>\n            <div className=\"mb-3\">\n                <label htmlFor=\"guarStart\" className=\"form-label fs-4\">Product Guarantee Start</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"guarStart\" \n                    className=\"form-control\" \n                    id=\"guarStart\" \n                    placeholder=\"Product Guarantee\"\n                    value={guarStart}\n                    onChange={(e) => setGuarStart(e.target.value)}/>\n                <label htmlFor=\"guarEnd\" className=\"form-label fs-4\">Product Guarantee End</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"guarEnd\" \n                    className=\"form-control\" \n                    id=\"guarEnd\" \n                    placeholder=\"Product Guarantee\"\n                    value={guarEnd}\n                    onChange={(e) => setGuarEnd(e.target.value)}/>\n            </div>\n            <div className=\"mb-3\">\n                <h3 className='fs-4'>Product Price</h3>\n                {\n                    priceList.map((price, index) => {\n                        return (\n                            <div className=\"prices-container\" key={`key${index}`}>\n                                <div className=\"border rounded p-4 mb-3\">\n                                    <input \n                                        required\n                                        type=\"text\" \n                                        key={index}\n                                        name=\"value\" \n                                        className=\"form-control mb-2\" \n                                        id={ price.value } \n                                        placeholder=\"Price\"\n                                        value={ price.value }\n                                        onChange={(e) => handlePriceChange(e, index)}/>\n                                    <input \n                                        required\n                                        type=\"text\" \n                                        key={index+1}\n                                        name=\"symbol\" \n                                        className=\"form-control mb-2\" \n                                        id={ price.symbol }\n                                        placeholder=\"Currency\"\n                                        value={ price.symbol }\n                                        onChange={(e) => handlePriceChange(e, index)}/>\n                                    <div \n                                        className=\"form-check form-switch\"\n                                    >\n                                        <label className=\"form-check-label\" htmlFor={`flexSwitchCheckDefault_${index}`}>Default price</label>\n                                        <input \n                                            type=\"checkbox\" \n                                            key={index+2}\n                                            name=\"isDefault\" \n                                            className=\"form-check-input mb-2\" \n                                            id={`flexSwitchCheckDefault_${index}`}\n                                            value={ price.isDefault }\n                                            onChange={(e) => handlePriceChange(e, index, true)}/>\n                                    </div>\n                                    {\n                                        priceList.length !== 1 && (\n                                            <button\n                                              type=\"button\"\n                                              onClick={() => handlePriceRemove(index)}\n                                              className=\"btn btn-danger mt-2\"\n                                              key={index+3}\n                                            >\n                                              <span>Delete Price</span>\n                                            </button>\n                                        )\n                                    }\n                                </div>\n                                {\n                                    priceList.length - 1 === index && (\n                                        <button\n                                            type=\"button\"\n                                            onClick={handlePriceAdd}\n                                            className=\"btn btn-success my-4 w-100\"\n                                            key={index+4}\n                                            >\n                                                <span>Add Price</span>\n                                        </button>\n                                    )\n                                }\n                                \n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <button type=\"submit\" id=\"createProduct\" className=\"btn btn-success w-100\">Create product</button>\n        </form>\n    )\n}\n\nexport default AddProductForm;","import AddOrderForm from \"../addOrderForm/AddOrderForm\";\nimport AddProductForm from \"../addProductForm/AddProductForm\";\n\nconst AddItemForm = (props) => {\n    if(props.itemType === \"orders\") {\n        return <AddOrderForm />\n    } else if(props.itemType === \"products\") {\n        return <AddProductForm />\n    }\n}\n\nexport default AddItemForm;","const OrdersListItem = ({title, date, description, onDelete, getProducts}) => {\n\n    return (\n        <li \n            className=\"card flex-row mb-4 shadow-lg text-dark p-1\">\n            <img src=\"https://www.sacbee.com/reviews/wp-content/uploads/2022/06/spectre-sacramento.jpg\" \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"Monitor\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body d-flex justify-content-between\">\n                <div className=\"card-body_text\">\n                    <h3 className=\"card-title display-3\">{title}</h3>\n                    <p className=\"card-text\">{description}</p>\n                    <p className=\"card-text\">{date}</p>\n                </div>\n                <span onClick={getProducts}\n                    className=\"rounded-pill align-self-center\">\n                    <button type=\"button\" className=\"btn btn-info text-white\" aria-label=\"Info\">Info</button>\n                </span>\n                <span >\n                    <button onClick={onDelete} type=\"button\" className=\"btn-close bg-danger\" aria-label=\"Close\"></button>\n                </span>\n            </div>\n        </li>\n    );\n}\n\nexport default OrdersListItem;","import { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { fetchOrders, orderDeleted } from './OrdersSlice';\nimport OrdersListItem from \"../ordersListItem/OrdersListItem\";\nimport AddItemForm from \"../addItemForm/AddItemForm\";\nimport Spinner from '../spinner/Spinner';\nimport { useHttp } from '../../hooks/http.hook';\n\nconst OrdersList = () => {\n    const { orders, ordersLoadingStatus } = useSelector(state => state.orders);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(fetchOrders());\n\n        // eslint-disable-next-line\n    }, []);\n\n    const onDelete = useCallback((id) => {\n        request(`http://localhost:3001/orders/${id}`, \"DELETE\")\n            .then(data => console.log(data, 'Deleted'))\n            .then(dispatch(orderDeleted(id)))\n            .catch(err => console.log(err));\n\n        // eslint-disable-next-line  \n    }, [request]);\n\n    if (ordersLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (ordersLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Loading error</h5>\n    }\n\n    const renderOrdersList = (arr) => {\n        if (arr.length === 0) {\n            return (\n                <CSSTransition\n                    timeout={0}\n                    in={true}\n                    classNames=\"fade\">\n                    <h5 className=\"text-center mt-5\">No orders yet</h5>\n                </CSSTransition>\n            )\n        }\n\n        return arr.map(({id, ...props}) => {\n            return (\n                <CSSTransition \n                    key={id}\n                    in={true}\n                    timeout={500}\n                    classNames=\"fade\">\n                    <OrdersListItem  {...props} key={id}  onDelete={() => onDelete(id)} />\n                </CSSTransition>\n            )\n        })\n    }\n\n    const elements = renderOrdersList(orders);\n    return (\n        <div className='mb-3 card-body'>\n            <button className=\"btn btn-success mb-4 btn-lg btn-block w-100\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseForm\" aria-expanded=\"false\" aria-controls=\"collapseForm\">\n                Add New Order\n            </button>\n            <div className=\"collapse\" id=\"collapseForm\">\n                <AddItemForm itemType=\"orders\" />\n            </div>\n                <ul>\n                    {elements}\n                </ul>\n        </div>\n    )\n}\n\nexport default OrdersList;","const Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5 d-flex\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","const useDate = (simpFormat = false) => {\n    const DAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesda', 'Thursday', 'Friday', 'Saturday'];\n    const MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n    let today = new Date(),\n        time = today.getHours().toString().padStart(2, '0') + ':' + today.getMinutes().toString().padStart(2, '0') + ':' + today.getSeconds().toString().padStart(2, '0'),\n        day = today.getDay(),\n        date = today.getDate(),\n        month = today.getMonth() + 1,\n        year = today.getFullYear();\n\n    if(simpFormat) {\n        return `${year}-${month.toString().padStart(2, '0')}-${date.toString().padStart(2, '0')} ${time}`;\n    } else {\n        return `${DAYS[day]} ${date} ${MONTHS[month-1]} ${year}`;\n    }\n}\n\nexport default useDate;"],"names":["_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","description","setDescription","dispatch","useDispatch","request","useHttp","date","useDate","_jsxs","className","onSubmit","e","preventDefault","newItem","id","uuidv4","JSON","stringify","then","res","console","log","orderCreated","catch","err","children","_jsx","htmlFor","required","type","name","placeholder","value","onChange","target","serialNumber","setserialNumber","_useState5","_useState6","isNew","setIsNew","_useState7","_useState8","photo","setPhoto","_useState9","_useState10","setType","_useState11","_useState12","specification","setSpecification","_useState13","_useState14","guarStart","setGuarStart","_useState15","_useState16","guarEnd","setGuarEnd","_useState17","symbol","isDefault","_useState18","priceList","setPriceList","_useSelector","useSelector","state","filters","filtersLoadingStatus","handlePriceChange","index","checkbox","arguments","length","undefined","_e$target","checked","list","_toConsumableArray","document","querySelectorAll","forEach","el","handlePriceAdd","concat","guarantee","start","end","price","getElementById","innerText","setTimeout","classList","remove","productCreated","status","map","_ref","label","renderFilters","onClick","splice","handlePriceRemove","props","itemType","AddOrderForm","AddProductForm","onDelete","getProducts","src","alt","style","orders","ordersLoadingStatus","useEffect","fetchOrders","useCallback","data","orderDeleted","Spinner","arr","elements","CSSTransition","timeout","in","classNames","_objectWithoutProperties","_excluded","_createElement","OrdersListItem","_objectSpread","key","AddItemForm","role","simpFormat","today","Date","time","getHours","toString","padStart","getMinutes","getSeconds","day","getDay","getDate","month","getMonth","year","getFullYear"],"sourceRoot":""}